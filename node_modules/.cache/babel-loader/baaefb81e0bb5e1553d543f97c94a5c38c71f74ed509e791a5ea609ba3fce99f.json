{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\lamsalpawan\\\\frontend\\\\src\\\\components\\\\InputField.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputField = ({\n  type,\n  placeholder,\n  icon,\n  onChange,\n  value\n}) => {\n  _s();\n  // State to toggle password visibility\n  const [isPasswordShown, setIsPasswordShown] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: isPasswordShown ? 'text' : type // Toggle password visibility\n      ,\n      placeholder: placeholder,\n      className: \"input-field\",\n      required: true,\n      onChange: onChange // Add onChange here\n      ,\n      value: value // Add value here to make it a controlled component\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"material-symbols-rounded\",\n      children: icon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), type === 'password' && /*#__PURE__*/_jsxDEV(\"i\", {\n      onClick: () => setIsPasswordShown(prevState => !prevState),\n      className: \"material-symbols-rounded eye-icon\",\n      children: isPasswordShown ? 'visibility' : 'visibility_off'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(InputField, \"1TfJQtW4L+DJn6GaaUH0SkXo/hM=\");\n_c = InputField;\nexport default InputField;\nvar _c;\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","InputField","type","placeholder","icon","onChange","value","_s","isPasswordShown","setIsPasswordShown","className","children","required","fileName","_jsxFileName","lineNumber","columnNumber","onClick","prevState","_c","$RefreshReg$"],"sources":["E:/Projects/lamsalpawan/frontend/src/components/InputField.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst InputField = ({ type, placeholder, icon, onChange, value }) => {\r\n  // State to toggle password visibility\r\n  const [isPasswordShown, setIsPasswordShown] = useState(false);\r\n\r\n  return (\r\n    <div className=\"input-wrapper\">\r\n      <input\r\n        type={isPasswordShown ? 'text' : type} // Toggle password visibility\r\n        placeholder={placeholder}\r\n        className=\"input-field\"\r\n        required\r\n        onChange={onChange} // Add onChange here\r\n        value={value} // Add value here to make it a controlled component\r\n      />\r\n      <i className=\"material-symbols-rounded\">{icon}</i>\r\n      {type === 'password' && (\r\n        <i onClick={() => setIsPasswordShown(prevState => !prevState)} className=\"material-symbols-rounded eye-icon\">\r\n          {isPasswordShown ? 'visibility' : 'visibility_off'}\r\n        </i>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InputField;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,WAAW;EAAEC,IAAI;EAAEC,QAAQ;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACnE;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAE7D,oBACEE,OAAA;IAAKU,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BX,OAAA;MACEE,IAAI,EAAEM,eAAe,GAAG,MAAM,GAAGN,IAAK,CAAC;MAAA;MACvCC,WAAW,EAAEA,WAAY;MACzBO,SAAS,EAAC,aAAa;MACvBE,QAAQ;MACRP,QAAQ,EAAEA,QAAS,CAAC;MAAA;MACpBC,KAAK,EAAEA,KAAM,CAAC;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACFhB,OAAA;MAAGU,SAAS,EAAC,0BAA0B;MAAAC,QAAA,EAAEP;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjDd,IAAI,KAAK,UAAU,iBAClBF,OAAA;MAAGiB,OAAO,EAAEA,CAAA,KAAMR,kBAAkB,CAACS,SAAS,IAAI,CAACA,SAAS,CAAE;MAACR,SAAS,EAAC,mCAAmC;MAAAC,QAAA,EACzGH,eAAe,GAAG,YAAY,GAAG;IAAgB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAAT,EAAA,CAtBKN,UAAU;AAAAkB,EAAA,GAAVlB,UAAU;AAwBhB,eAAeA,UAAU;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}