{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\lamsalpawan\\\\frontend\\\\src\\\\components\\\\Projects.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport \"./Projects.css\"; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Projects = () => {\n  _s();\n  const [projects, setProjects] = useState([]);\n  const [selectedProject, setSelectedProject] = useState(null);\n  useEffect(() => {\n    // Fetch projects from the backend\n    axios.get(\"http://localhost:5000/api/projects\").then(response => setProjects(response.data)).catch(error => console.error(\"Error fetching projects:\", error));\n  }, []);\n  const handleCardClick = project => {\n    // Toggle the visibility of the project details when clicked\n    if ((selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.id) === project.id) {\n      setSelectedProject(null); // Close if the same card is clicked again\n    } else {\n      setSelectedProject(project);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"projects-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Projects\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"projects-list\",\n      children: projects.map(project => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-card\",\n        onClick: () => handleCardClick(project),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-card-header\",\n          children: [project.image_url && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: project.image_url,\n            alt: project.title,\n            className: \"project-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: project.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: new Date(project.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this), (selectedProject === null || selectedProject === void 0 ? void 0 : selectedProject.id) === project.id && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 33\n          }, this), project.github_link && /*#__PURE__*/_jsxDEV(\"a\", {\n            href: project.github_link,\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            className: \"github-link\",\n            children: \"View on GitHub\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }, this)]\n      }, project.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Projects, \"HYp3BKs9VpRLZxBGL+Kp5Gm1U0o=\");\n_c = Projects;\nexport default Projects;\nvar _c;\n$RefreshReg$(_c, \"Projects\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Projects","_s","projects","setProjects","selectedProject","setSelectedProject","get","then","response","data","catch","error","console","handleCardClick","project","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","image_url","src","alt","title","Date","date","toLocaleDateString","description","github_link","href","target","rel","_c","$RefreshReg$"],"sources":["E:/Projects/lamsalpawan/frontend/src/components/Projects.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Projects.css\"; // Import the CSS file for styling\r\n\r\nconst Projects = () => {\r\n    const [projects, setProjects] = useState([]);\r\n    const [selectedProject, setSelectedProject] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch projects from the backend\r\n        axios.get(\"http://localhost:5000/api/projects\")\r\n            .then((response) => setProjects(response.data))\r\n            .catch((error) => console.error(\"Error fetching projects:\", error));\r\n    }, []);\r\n\r\n    const handleCardClick = (project) => {\r\n        // Toggle the visibility of the project details when clicked\r\n        if (selectedProject?.id === project.id) {\r\n            setSelectedProject(null); // Close if the same card is clicked again\r\n        } else {\r\n            setSelectedProject(project);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"projects-container\">\r\n            <h1>My Projects</h1>\r\n            <div className=\"projects-list\">\r\n                {projects.map((project) => (\r\n                    <div\r\n                        key={project.id}\r\n                        className=\"project-card\"\r\n                        onClick={() => handleCardClick(project)}\r\n                    >\r\n                        <div className=\"project-card-header\">\r\n                            {project.image_url && (\r\n                                <img\r\n                                    src={project.image_url}\r\n                                    alt={project.title}\r\n                                    className=\"project-image\"\r\n                                />\r\n                            )}\r\n                            <h3>{project.title}</h3>\r\n                            <p>{new Date(project.date).toLocaleDateString()}</p>\r\n                        </div>\r\n                        {selectedProject?.id === project.id && (\r\n                            <div className=\"project-details\">\r\n                                <p>{project.description}</p>\r\n                                {project.github_link && (\r\n                                    <a\r\n                                        href={project.github_link}\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                        className=\"github-link\"\r\n                                    >\r\n                                        View on GitHub\r\n                                    </a>\r\n                                )}\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Projects;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE5DD,SAAS,CAAC,MAAM;IACZ;IACAE,KAAK,CAACS,GAAG,CAAC,oCAAoC,CAAC,CAC1CC,IAAI,CAAEC,QAAQ,IAAKL,WAAW,CAACK,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC9CC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC,CAAC;EAC3E,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,eAAe,GAAIC,OAAO,IAAK;IACjC;IACA,IAAI,CAAAV,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEW,EAAE,MAAKD,OAAO,CAACC,EAAE,EAAE;MACpCV,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC9B,CAAC,MAAM;MACHA,kBAAkB,CAACS,OAAO,CAAC;IAC/B;EACJ,CAAC;EAED,oBACIf,OAAA;IAAKiB,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBAC/BlB,OAAA;MAAAkB,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBtB,OAAA;MAAKiB,SAAS,EAAC,eAAe;MAAAC,QAAA,EACzBf,QAAQ,CAACoB,GAAG,CAAER,OAAO,iBAClBf,OAAA;QAEIiB,SAAS,EAAC,cAAc;QACxBO,OAAO,EAAEA,CAAA,KAAMV,eAAe,CAACC,OAAO,CAAE;QAAAG,QAAA,gBAExClB,OAAA;UAAKiB,SAAS,EAAC,qBAAqB;UAAAC,QAAA,GAC/BH,OAAO,CAACU,SAAS,iBACdzB,OAAA;YACI0B,GAAG,EAAEX,OAAO,CAACU,SAAU;YACvBE,GAAG,EAAEZ,OAAO,CAACa,KAAM;YACnBX,SAAS,EAAC;UAAe;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CACJ,eACDtB,OAAA;YAAAkB,QAAA,EAAKH,OAAO,CAACa;UAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxBtB,OAAA;YAAAkB,QAAA,EAAI,IAAIW,IAAI,CAACd,OAAO,CAACe,IAAI,CAAC,CAACC,kBAAkB,CAAC;UAAC;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,EACL,CAAAjB,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEW,EAAE,MAAKD,OAAO,CAACC,EAAE,iBAC/BhB,OAAA;UAAKiB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC5BlB,OAAA;YAAAkB,QAAA,EAAIH,OAAO,CAACiB;UAAW;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAC3BP,OAAO,CAACkB,WAAW,iBAChBjC,OAAA;YACIkC,IAAI,EAAEnB,OAAO,CAACkB,WAAY;YAC1BE,MAAM,EAAC,QAAQ;YACfC,GAAG,EAAC,qBAAqB;YACzBnB,SAAS,EAAC,aAAa;YAAAC,QAAA,EAC1B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CACR;MAAA,GA7BIP,OAAO,CAACC,EAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA8Bd,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACpB,EAAA,CA7DID,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AA+Dd,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}